// –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:

function getRandomNumber(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

//1 - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤

function guessNumberGame() {
  let randomNumber = getRandomNumber(1, 100);
  console.log(randomNumber);
  let userNumber = prompt(`–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!`);
  while (true) {
    if (userNumber == randomNumber) {
      alert(`–ü–æ–∑–¥—Ä–∞–ª—è–µ–º, —á–∏—Å–ª–æ —É–≥–∞–¥–∞–Ω–æ! –£–¥–∞—á–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üòâ`);
      break;
    } else if (userNumber === null) {
      alert('–ñ–¥–µ–º —Ç–µ–±—è —Å–Ω–æ–≤–∞!')
      break;
    } else  if (userNumber < randomNumber) {
      userNumber = prompt(`–£–ø—Å, —Ç–≤–æ–µ —á–∏—Å–ª–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ ‚≠°`);
    } else if (userNumber > randomNumber) {
      userNumber = prompt(`–£–ø—Å, —Ç–≤–æ–µ —á–∏—Å–ª–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ ‚≠£`);
    } else {
      userNumber = prompt(`–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –≤–≤–µ–ª —á–∏—Å–ª–æ? –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑`);
    }
  }
}

//2 - –ü—Ä–æ—Å—Ç–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞

function arithmeticGame() {
  let playAgain = true;
  let greetingArray = ['–í—Å—ë –≤–µ—Ä–Ω–æ!', '–í —è–±–ª–æ—á–∫–æ!', '–ì–µ–Ω–∏–∞–ª—å–Ω–æ!', '–£ —Ç–µ–±—è –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è!', '–ö–∞–∫ —Ç–µ–±–µ —ç—Ç–æ —É–¥–∞–µ—Ç—Å—è? –†–µ—à–µ–Ω–æ –æ—Ç–ª–∏—á–Ω–æ!', '–ò–º–µ–Ω–Ω–æ —Ç–∞–∫!', '–ò–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!'];
  let tryAgainArray = ['–í–∞—Ä–∏–∞–Ω—Ç —Ö–æ—Ä–æ—à–∏–π, –Ω–æ –Ω–µ–≤–µ—Ä–Ω—ã–π.', '–ü–æ—á—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!', '–ù–µ —Å–æ–≤—Å–µ–º –≤–µ—Ä–Ω–æ.', '–£ —Ç–µ–±—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è!'];
  let taskArray = ['–ü–æ–ø—Ä–æ–±—É–π —Ä–µ—à–∏—Ç—å —Ç–∞–∫—É—é –∑–∞–¥–∞—á—É:', '–ó–∞–¥–∞—á–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è üòâ', '–ù–∞–π–¥–µ—à—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–¥–∞—á–∏?'];
  const operationArray = ['+', '-', '*', '/'];

  while (playAgain) {
    let operation = operationArray[getRandomNumber(0, operationArray.length - 1)];
    let a;
    let b;
    let answer;

    switch (operation) {
      case '+':
        a = getRandomNumber(1, 30);
        b = getRandomNumber(1, 30);
        answer = a + b;
        break;
      case '-':
        a = getRandomNumber(1, 30);
        b = getRandomNumber(1, a);
        answer = a - b;
        break;
      case '*':
        a = getRandomNumber(1, 12);
        b = getRandomNumber(0, 12);
        answer = a * b;
        break;
      case '/':
        b = getRandomNumber(1, 10);
        answer = getRandomNumber(1, 10);
        a = b * answer;
        break;
    }

    let task = taskArray[getRandomNumber(0, taskArray.length - 1)];
    let userAnswer = prompt(`${task} \n${a} ${operation} ${b} = ?`);

    while (true) {
      if (userAnswer == null) {
        playAgain = false;
        break;
      } else if (userAnswer == answer) {
        let greeting = greetingArray[getRandomNumber(0, greetingArray.length - 1)];
        playAgain = confirm(`${greeting} –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º?`);
        break;
      } else {
        let tryAgain = tryAgainArray[getRandomNumber(0, tryAgainArray.length - 1)];
        userAnswer = prompt(`${tryAgain} –ü–æ–ø—Ä–æ–±—É–π —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –µ—â—ë —Ä–∞–∑: \n ${a} ${operation} ${b} = ?`);
      }
    }
  }

  if (playAgain === false) {
    alert('–ñ–¥–µ–º —Ç–µ–±—è —Å–Ω–æ–≤–∞!');
  }
}

